// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"
    ext.RETROFIT_VERSION = '2.6.2'
    ext.coroutines_version = '1.1.1'
    ext.appcompat_version = "1.1.0"
    ext.material_version = "1.0.0"
    ext.ktx_version = "1.1.0"
    ext.constraintlayout_version = "1.1.3"
    ext.camerax_version = "1.0.0-alpha06"
    ext.camerax_ext_version = "1.0.0-alpha03"
    ext.navigation_version = "2.2.0-beta01"
    ext.lifecycle_version = "2.2.0-rc01"
    ext.viewpager_version = "1.0.0-rc01"
    ext.glide_version = "4.9.0"
    ext.java_version = JavaVersion.VERSION_1_8
    repositories {
        google()
        jcenter();
        maven { url "https://maven.google.com" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
//        maven { url "https://oss.jfrog.org/libs-snapshot" }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.21'

//        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4+'
        classpath 'de.felixschulze.gradle:gradle-hockeyapp-plugin:3.6'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    buildToolsVersion = "30.0.3"
    compileSdkVersion = 30
    minSdkVersion    = 29
    targetSdkVersion = 30
    supportLibVersion = "28.0.0"
    // The Maven artifact groupdId of the third-party react-native modules which
    // Jitsi Meet SDK for Android depends on and which are not available in
    // third-party Maven repositories so we have to deploy to a Maven repository
    // of ours.
    moduleGroupId = 'com.facebook.react'
    // Maven repo where artifacts will be published
    mavenRepo = System.env.MVN_REPO ?: ""
    mavenUser = System.env.MVN_USER ?: ""
    mavenPassword = System.env.MVN_PASSWORD ?: ""
    // Libre build
    libreBuild = (System.env.LIBRE_BUILD ?: "false").toBoolean()
    googleServicesEnabled = project.file('app/google-services.json').exists() && !libreBuild
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://maven.google.com" }
//        maven { url "https://dl.bintray.com/hani-momanii/maven" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://jitpack.io" }
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
        maven {
            url "https://artifactory.paytm.in/libs-release-local"
        }
        maven{
          //url "https://github.com/jitsi/jitsi-maven-repository/raw/master/releases"

            url "C:/Users/himanshu.anand/Downloads/Data/meest-jitsi-sdk/repo"

//            url "C:/Bestone-PC/Jitsi/meest-jitsi-sdk/repo"
       //     url "C:/Users/deepak.gupta/Desktop/meest-jitsi-sdk/meest-jitsi-sdk/repo"
//            url "C:/Users/faisalali.khan/Desktop/meest-jitsi-sdk/repo"
        //    url "C:/Bestone-PC/Jitsi/meest-jitsi-sdk/repo"
//          url "C:/Users/miteanjay.kumar/Desktop/meest-jitsi-sdk/meest-jitsi-sdk/repo"

          //url "https://github.com/BestoneIndustries/meest-jitsi-sdk/tree/master/repo"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencies {

//implementation project(path: ':banuba_effect_player-release')
}
